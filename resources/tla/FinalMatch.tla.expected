---------------------------- MODULE FinalMatch ----------------------------
EXTENDS Integers, Sequences, FiniteSets

CONSTANT GoodGuys, Strong, Flight, HasArtifact

ASSUME
    /\  HasArtifact \in GoodGuys
    /\  Strong \subseteq GoodGuys
    /\  Flight \subseteq GoodGuys

--------------------------------------------------------------------------------
VARIABLE badGuyStatus, toDestroy, livingGoodGuys, log

vars == << badGuyStatus, toDestroy, livingGoodGuys, log >>

TypesOk == 
    /\  badGuyStatus \in { "hasArtifact", "alive", "defeated", "retired" }
    /\  livingGoodGuys \subseteq GoodGuys
    /\  toDestroy \in (Nat \union {-1})

--------------------------------------------------------------------------------
BadGuyFights == 
    /\  badGuyStatus # "defeated"
    /\  \E hero \in livingGoodGuys :
            /\  livingGoodGuys' = livingGoodGuys \ {hero}
            /\  IF  (hero = HasArtifact)
                THEN 
                    /\  badGuyStatus' = "hasArtifact"
                    /\  log' = (Append((Append(log, << "BadGuy defeats: ", 
                                        hero >>)), << "BadGuy has stone" >>))
                    /\  UNCHANGED << toDestroy >>
                ELSE 
                    /\  log' = Append(log, << "BadGuy defeats: ", hero >>)
                    /\  UNCHANGED << badGuyStatus, toDestroy >>

BadGuySnaps == 
    /\  badGuyStatus = "hasArtifact"
    /\  toDestroy = -1
    /\  toDestroy' = (Cardinality( livingGoodGuys ) \div 2)
    /\  log' = Append(log, << "BadGuy snaps" >>)
    /\  UNCHANGED << badGuyStatus, livingGoodGuys >>

BadGuyDestroys == 
    /\  toDestroy > 0
    /\  \E hero \in livingGoodGuys :
            /\  toDestroy' = toDestroy - 1
            /\  livingGoodGuys' = livingGoodGuys \ {hero}
            /\  log' = Append(log, << "BadGuy destroys: ", hero >>)
            /\  UNCHANGED << badGuyStatus >>

BadGuyRetires == 
    /\  badGuyStatus = "hasArtifact"
    /\  0 = toDestroy
    /\  badGuyStatus' = "retired"
    /\  log' = Append(log, << "BadGuy retires" >>)
    /\  UNCHANGED << toDestroy, livingGoodGuys >>

BadGuyDefeated == 
    /\  badGuyStatus = "retired"
    /\  \E hero1 \in livingGoodGuys :
            /\  hero1 \in Strong
            /\  \E hero2 \in livingGoodGuys :
                    /\  hero2 \in Flight
                    /\  badGuyStatus' = "defeated"
                    /\  log' = Append(log, << "BadGuy defeated by", hero1, 
                                    hero2 >>)
                    /\  UNCHANGED << toDestroy, livingGoodGuys >>

--------------------------------------------------------------------------------
Init == 
    /\  badGuyStatus = "alive"
    /\  livingGoodGuys = GoodGuys
    /\  log = << >>
    /\  toDestroy = -1

Next == 
    \/  BadGuyFights
    \/  BadGuySnaps
    \/  BadGuyDestroys
    \/  BadGuyRetires
    \/  BadGuyDefeated

--------------------------------------------------------------------------------
Spec == 
    /\  Init
    /\  [][Next]_vars
    /\  WF_vars(BadGuyFights)
    /\  WF_vars(BadGuySnaps)
    /\  WF_vars(BadGuyDestroys)
    /\  WF_vars(BadGuyRetires)
    /\  WF_vars(BadGuyDefeated)

End == 
    \/  livingGoodGuys = {}
    \/  badGuyStatus = "defeated"

Termination == <>[](End)


=============================================================================
